# Prac 4 code so far

import spidev
import time
import os
import sys

# Open SPI bus
spi = spidev.SpiDev()   # create spi object
spi.open(0,0)
# RPI has one bus (#0) and two devices (#0 & #1)


# function to read ADC data from a channel
def GetData(channel):   # channel must be an integer 0-7
    adc = spi.xfer2([1,(8+channel)<<4,0])   # sending 3 bytes
    data = ((adc[1]&3) << 8) + adc[2]
    return data


# function to convert data to voltage level,
# places: number of decimal places needed
def ConvertVolts(data,places):
    volts = (data * 3.3) / float(1023)
    volts = round(volts,places)
    return volts


# Define sensor channels
light = 0
temp = 6
pot = 7
# Define delay between readings
delay = 0.5


# Define arrays and counters
arrLight = [0]*5
arrTemp = [0]*5
arrPot = [0]*5
arrTime = [0]*5
count = 0

# Define switch pins
import RPi.GPIO as GPIO
GPIO.setmode(GPIO.BCM)

reset = 4
freq = 17
stop = 27
display = 22

GPIO.setup(reset, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)
GPIO.setup(freq, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)
GPIO.setup(stop, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)
GPIO.setup(display, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)

tFreq = 0.5
monitor = False

# Time functions
def getTime():

# Frequency Switch
def onFreq():
    if tFreq == 0.5:
        tFreq = 1
    else if tFreq == 1:
        tFreq = 2
    else:
        tFreq = 0.5
        
# Reset Switch
def onReset():
    arrLight = [0]*5
    arrTemp = [0]*5
    arrPot = [0]*5
    arrTime = [0]*5
    count = 0
    onFreq()

# Stop Switch
def onStop():
    if monitor == False:
        monitor = True
    else:
        monitor = False
        
# Display Switch
def onDisplay():


#Interrupts
GPIO.add_event_detect(reset, GPIO.RISING, callback= onReset(),
bouncetime=200)

GPIO.add_event_detect(freq, GPIO.RISING, callback= onFreq(),
bouncetime=200)

GPIO.add_event_detect(stop, GPIO.RISING, callback= onStop(),
bouncetime=200)

GPIO.add_event_detect(display, GPIO.RISING, callback= onDisplay(),
bouncetime=200) 

try:
    while True:
        # Read the data
        sensr_data = GetData (light)    # Measure light
        arrLight[count] = ConvertVolts(sensor_data,2)
        
        sensr_data = GetData (temp)     # Measure temp
        arrTemp[count] = ConvertVolts(sensor_data,2)

        sensr_data = GetData (pot)      # Measure pot
        arrPot[count] = ConvertVolts(sensor_data,2)

        arrTime[count] = getTime()
        count++
        # Wait before repeating loop
        time.sleep(delay)
except KeyboardInterrupt:
 spi.close()
